 type DepositEntry = 
 record {
   owner: principal;
   token: principal;
   token_id: nat;
   time: nat;
 };

type WithdrawalEntry = 
 record {
   to: principal;
   token: principal;
   token_id: nat;
   time: nat;
 };

 type Result = 
 variant {
   Err: text;
   Ok: text;
 };

service : (vec text) -> {
    "deposit_count": () -> (nat) query;
    "get_deposits": (nat) -> (vec DepositEntry) query;
    "withdrawal_count": () -> (nat) query;
    "get_withdrawals": (nat) -> (vec WithdrawalEntry) query;

    "withdraw_nft": (text, nat, vec nat8) -> (Result);
    "verify_signature": (principal, principal, nat, vec nat8) -> (Result);
    "transfer_notification": (principal, principal, nat, nat) -> (Result);
}
